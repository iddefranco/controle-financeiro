plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.flywaydb.flyway" version "6.5.5"
}

group = 'br.com.controlefinanceiro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.0")
	set('mapStructVersion', '1.3.1.Final')
	set('springfox', '3.0.0')
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation "org.flywaydb:flyway-core"
	implementation "io.springfox:springfox-boot-starter:$springfox"
	implementation "org.mapstruct:mapstruct-jdk8:$mapStructVersion"
    implementation 'org.projectlombok:lombok:1.18.20'
	implementation("org.apache.commons:commons-lang3")
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.3'

	implementation group: 'org.hibernate', name: 'hibernate-java8', version: '5.0.12.Final'
	compileOnly group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: '5.4.0.Final'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.3'


	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor("org.mapstruct:mapstruct-processor:$mapStructVersion")
	runtimeOnly 'org.postgresql:postgresql'
	//testImplementation 'org.springframework.security:spring-security-test'
	testImplementation('org.springframework.cloud:spring-cloud-contract-wiremock')
	testImplementation('com.h2database:h2')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	['annotationProcessor', 'compileOnly', 'testAnnotationProcessor', 'testCompileOnly']
			.each { conf ->
				add(conf, 'org.projectlombok:lombok')
				add(conf, "org.mapstruct:mapstruct-processor:$mapStructVersion")
			}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	maxHeapSize "512m"
	useJUnitPlatform()
	testLogging.showStandardStreams = true

	beforeTest {
		logger.lifecycle("$it\n")
	}

	afterTest { descriptor, result ->
		logger.lifecycle("$descriptor")
		logger.lifecycle("Result: $result \n")
	}
}

compileJava {
	options.compilerArgs = [
			'-parameters',
			'-Amapstruct.defaultComponentModel=spring'
	]
}

flyway {
	user = 'postgres'
	password = '123456'
	url = 'jdbc:postgresql://localhost:5432/controle-financeiro'
}
